name: Build and Push Container

on:
  push:
    branches: [main]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-east4
  REGISTRY: us-east4-docker.pkg.dev

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Get short SHA
        id: vars
        run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and push container
        run: |
          docker build \
            --build-arg NEXT_PUBLIC_SUPABASE_URL="${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}" \
            --build-arg NEXT_PUBLIC_SUPABASE_ANON_KEY="${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}" \
            -t ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/interlinear/app:${{ steps.vars.outputs.short_sha }} \
            -t ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/interlinear/app:latest \
            .
          docker push ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/interlinear/app:${{ steps.vars.outputs.short_sha }}
          docker push ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/interlinear/app:latest

      - name: Output deployment commands
        run: |
          echo "âœ… Container built and pushed successfully"
          echo ""
          echo "ðŸ“¦ Image: ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/interlinear/app:${{ steps.vars.outputs.short_sha }}"
          echo ""
          echo "ðŸš€ To deploy to staging:"
          echo "   ./scripts/deploy-infra.sh staging --with-cloud-run --image-tag ${{ steps.vars.outputs.short_sha }}"
          echo ""
          echo "ðŸš€ To deploy to prod:"
          echo "   ./scripts/deploy-infra.sh prod --with-cloud-run --image-tag ${{ steps.vars.outputs.short_sha }}"
